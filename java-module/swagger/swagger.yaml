openapi: 3.0.1
info:
  title: mc-o11y-manager API Documentation
  description: API documentation for mc-o11y-manager
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.2.0
servers:
- url: http://localhost:18080
paths:
  /api/o11y/monitoring/plugins:
    get:
      tags:
      - "[System] environment"
      summary: Get all available monitoring plugin list
      operationId: monitoring-list-plugins
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListPluginDefInfo'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}:
    get:
      tags:
      - "[Target] Monitoring target management"
      summary: Get monitoring target
      operationId: monitoring-get-target
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyTargetInfo'
    put:
      tags:
      - "[Target] Monitoring target management"
      summary: Update target information
      operationId: monitoring-update-target
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
    post:
      tags:
      - "[Target] Monitoring target management"
      summary: Add new monitoring target (MC-O11y-Agent Install)
      operationId: monitoring-add-target
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TargetInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
    delete:
      tags:
      - "[Target] Monitoring target management"
      summary: Delete monitoring agent & management target
      operationId: monitoring-delete-target
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/storage:
    get:
      tags:
      - "[Monitoring storage] Monitoring target storage management"
      summary: Get all target monitoring storage list
      operationId: monitoring-list-storage
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMonitoringConfigInfo'
    put:
      tags:
      - "[Monitoring storage] Monitoring target storage management"
      summary: Update target monitoring storage
      operationId: monitoring-update-storage
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringConfigInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
    post:
      tags:
      - "[Monitoring storage] Monitoring target storage management"
      summary: Add target monitoring storage
      operationId: monitoring-add-storage
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringConfigInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/item:
    get:
      tags:
      - "[Monitoring item] Monitoring target item management"
      summary: Get all target monitoring item list
      operationId: monitoring-list-item
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMonitoringConfigInfo'
    put:
      tags:
      - "[Monitoring item] Monitoring target item management"
      summary: Update target monitoring item
      operationId: monitoring-update-item
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringConfigInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
    post:
      tags:
      - "[Monitoring item] Monitoring target item management"
      summary: Add target monitoring item
      operationId: monitoring-add-item
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringConfigInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
  /api/o11y/monitoring/miningdb:
    get:
      tags:
      - "[Target] Monitoring target management"
      summary: Get mining influxdb detail
      operationId: monitoring-list-miningdb
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyMiningDBInfo'
    put:
      tags:
      - "[Mining InfluxDB] Monitoring metric downsampling"
      summary: Update mining influxdb info
      operationId: monitoring-update-miningdb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MiningDBSetDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
  /api/o11y/monitoring/opensearch/{opensearchSeq}/logs:
    post:
      tags:
      - "[Monitoring log] Monitoring log"
      summary: Get collected logs from OpenSearch
      operationId: monitoring-list-opensearch-log
      parameters:
      - name: opensearchSeq
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMapStringObject'
  /api/o11y/monitoring/miningdb/metric:
    post:
      tags:
      - "[Mining InfluxDB] Monitoring metric downsampling"
      summary: Get downsampling metric
      operationId: monitoring-list-miningdb-metric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMetricInfo'
  /api/o11y/monitoring/influxdb/{influxDBSeq}/metric:
    post:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: Get collected metric
      operationId: monitoring-list-metric
      parameters:
      - name: influxDBSeq
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMetricInfo'
  /api/o11y/monitoring/{nsId}/{mciId}/target:
    get:
      tags:
      - "[Target] Monitoring target management"
      summary: Get all mc-observability management target list in specified NS and
        MCI
      operationId: monitoring-list-specified-target
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListTargetInfo'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/csp/{measurement}:
    get:
      tags:
      - "[Monitoring CSP] Monitoring target from the CSP"
      summary: Get target monitoring data from the CSP
      operationId: monitoring-get-csp
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      - name: measurement
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyData'
  /api/o11y/monitoring/target:
    get:
      tags:
      - "[Target] Monitoring target management"
      summary: Get all mc-observability management target list
      operationId: monitoring-list-all-target
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListTargetInfo'
  /api/o11y/monitoring/opensearch:
    get:
      tags:
      - "[Monitoring log] Monitoring log"
      summary: Get all OpenSearch list
      operationId: monitoring-list-opensearch
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListOpensearchInfo'
  /api/o11y/monitoring/ns:
    get:
      tags:
      - "[Target] Monitoring target management"
      summary: Get all mc-observability management namespace list
      operationId: monitoring-list-ns
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TumblebugNS'
  /api/o11y/monitoring/miningdb/tag:
    get:
      tags:
      - "[Mining InfluxDB] Monitoring metric downsampling"
      summary: Get downsampling metric tag list
      operationId: monitoring-list-miningdb-measurement-tag"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMeasurementTagInfo'
  /api/o11y/monitoring/miningdb/measurement:
    get:
      tags:
      - "[Mining InfluxDB] Monitoring metric downsampling"
      summary: Get downsampling measurement & field list
      operationId: monitoring-get-miningdb-measurement
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMeasurementFieldInfo'
  /api/o11y/monitoring/influxdb:
    get:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: Get all InfluxDB list
      operationId: monitoring-list-influxdb
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListInfluxDBInfo'
  /api/o11y/monitoring/influxdb/{influxDBSeq}/tag:
    get:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: Get collected measurement tag list
      operationId: monitoring-list-measurement-tag
      parameters:
      - name: influxDBSeq
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMeasurementTagInfo'
  /api/o11y/monitoring/influxdb/{influxDBSeq}/measurement:
    get:
      tags:
      - "[Monitoring metric] Monitoring metric"
      summary: Get collected measurement & field list
      operationId: monitoring-get-measurement
      parameters:
      - name: influxDBSeq
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListMeasurementFieldInfo'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/storage/{storageSeq}:
    delete:
      tags:
      - "[Monitoring storage] Monitoring target storage management"
      summary: Delete target monitoring storage
      operationId: monitoring-delete-storage
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      - name: storageSeq
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/item/{itemSeq}:
    delete:
      tags:
      - "[Monitoring item] Monitoring target item management"
      summary: Delete target monitoring item
      operationId: monitoring-delete-item
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: mciId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      - name: itemSeq
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBody'
  /api/o11y/trigger/policy/history:
    get:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: Get Trigger History all list
      description: "Base64 Encoded value:  \nname\n"
      operationId: GetTriggerHistoryAllList
      parameters:
      - name: policySeq
        in: query
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListTriggerHistoryInfo'
  /api/o11y/trigger/policy:
    get:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: Get Trigger Policy all list
      operationId: GetTriggerPolicyAllList
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListTriggerPolicyInfo'
    post:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: Create request Trigger Policy
      description: |
        The values that require Base64 encoding:
        description, name, threshold
      operationId: CreateRequestTriggerPolicy
      requestBody:
        description: triggerPolicyCreateDto
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TriggerPolicyCreateDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      x-codegen-request-body-name: triggerPolicyCreateDto
  /api/o11y/trigger/policy/{policySeq}:
    delete:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: Delete request trigger policy
      operationId: DeleteRequestTriggerPolicy
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
    patch:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: Update request Trigger Policy
      operationId: UpdateRequestTriggerPolicy
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: triggerPolicyUpdateDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerPolicyUpdateDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      x-codegen-request-body-name: triggerPolicyUpdateDto
  /api/o11y/trigger/policy/target:
    get:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: Get Trigger Target all list
      operationId: GetTriggerTargetAllList
      parameters:
      - name: policySeq
        in: query
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListTriggerTargetInfo'
  /api/o11y/trigger/policy/{policySeq}/target:
    put:
      tags:
      - "[Metric Event] monitoring measurement trigger"
      summary: Set trigger target
      operationId: PutTriggerTarget
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: targets
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  ns_id:
                    type: string
                  target_id:
                    type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      x-codegen-request-body-name: targets
  /api/o11y/trigger/policy/{policySeq}/alert/email:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: Get Trigger Alert Email User all list
      operationId: GetTriggerAlertEmailUserAllList
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListTriggerEmailUserInfo'
    post:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: Create request Trigger Alert Email User
      operationId: CreateTriggerAlertEmailUser
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerEmailUserCreateDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      x-codegen-request-body-name: dto
  /api/o11y/trigger/policy/{policySeq}/alert/email/{seq}:
    delete:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: Delete Request Trigger Alert Email User
      operationId: DeleteTriggerAlertEmailUser
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      - name: seq
        in: path
        description: seq
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
  /api/o11y/trigger/policy/{policySeq}/alert/slack:
    get:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: Get Trigger Alert Slack User all list
      operationId: GetTriggerAlertSlackUserAllList
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyListTriggerSlackUserInfo'
    post:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: Create request Trigger Alert Slack User
      operationId: CreateTriggerAlertSlackUser
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerSlackUserCreateDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      x-codegen-request-body-name: dto
  /api/o11y/trigger/policy/{policySeq}/alert/slack/{seq}:
    delete:
      tags:
      - "[Metric Event] monitoring trigger event handler"
      summary: Delete Request Trigger Alert Slack User
      operationId: DeleteTriggerAlertSlackUser
      parameters:
      - name: policySeq
        in: path
        description: policySeq
        required: true
        schema:
          type: integer
          format: int64
      - name: seq
        in: path
        description: seq
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
  /api/o11y/insight/anomaly-detection/options:
    get:
      tags:
      - "[Insight] Anomaly Detection"
      summary: GetAnomalyDetectionOptions
      description: "Fetch the available target types, metric types, and interval options\
        \ for the anomaly detection API."
      operationId: GetAnomalyDetectionOptions
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyAnomalyDetectionOptions'
              example:
                data:
                  target_types:
                  - vm
                  - mci
                  measurements:
                  - cpu
                  - mem
                  execution_intervals:
                  - 5m
                  - 10m
                  - 30m
                rs_code: "200"
                rs_msg: Success
      deprecated: false
  /api/o11y/insight/anomaly-detection/settings:
    get:
      tags:
      - "[Insight] Anomaly Detection"
      summary: GetAllAnomalyDetectionSettings
      description: Fetch the current settings for all anomaly detection targets.
      operationId: GetAllAnomalyDetectionSettings
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyAnomalyDetectionSettings'
              example:
              - seq: 1
                ns_id: ns01
                target_id: vm01
                target_type: VM
                measurement: cpu
                execution_interval: 5m
                last_execution: 2024-10-10T06:08:48Z
                create_at: 2024-10-10T03:08:48Z
      deprecated: false
    post:
      tags:
      - "[Insight] Anomaly Detection"
      summary: PostAnomalyDetectionSettings
      description: "Register a target for anomaly detection and automatically schedule\
        \ detection tasks.  \n(measurememt : field) Relationships are as follows.\
        \  \ncpu : usage_idle  \nmem : used_percent\n"
      operationId: PostAnomalyDetectionSettings
      parameters:
      - name: Content-Type
        in: header
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnomalyDetectionTargetRegistration'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      deprecated: false
      x-codegen-request-body-name: body
  /api/o11y/insight/anomaly-detection/settings/{settingSeq}:
    put:
      tags:
      - "[Insight] Anomaly Detection"
      summary: PutAnomalyDetectionSettings
      description: "Modify the settings for a specific anomaly detection target, including\
        \ the monitoring metric and interval."
      operationId: PutAnomalyDetectionSettings
      parameters:
      - name: settingSeq
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: Content-Type
        in: header
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnomalyDetectionTargetUpdate'
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      deprecated: false
      x-codegen-request-body-name: body
    delete:
      tags:
      - "[Insight] Anomaly Detection"
      summary: DeleteAnomalyDetectionSettings
      description: "Remove a target from anomaly detection, stopping and removing\
        \ any scheduled tasks."
      operationId: DeleteAnomalyDetectionSettings
      parameters:
      - name: settingSeq
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      deprecated: false
  /api/o11y/insight/anomaly-detection/settings/nsId/{nsId}/target/{targetId}:
    get:
      tags:
      - "[Insight] Anomaly Detection"
      summary: GetTargetAnomalyDetectionSettings
      description: Fetch the current settings for a specific anomaly detection target.
      operationId: GetTargetAnomalyDetectionSettings
      parameters:
      - name: nsId
        in: path
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyAnomalyDetectionSettings'
      deprecated: false
  /api/o11y/insight/anomaly-detection/nsId/{nsId}/target/{targetId}/history:
    get:
      tags:
      - "[Insight] Anomaly Detection"
      summary: GetAnomalyDetectionHistory
      description: Fetch the results of anomaly detection for a specific target within
        a given time range.
      operationId: GetAnomalyDetectionHistory
      parameters:
      - name: nsId
        in: path
        description: The Namespace ID for the prediction.
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        description: The ID of the target vm or mci group.
        required: true
        schema:
          type: string
      - name: measurement
        in: query
        description: The type of metric to retrieve.
        required: true
        schema:
          type: string
          enum:
          - cpu
          - mem
      - name: start_time
        in: query
        description: "The start timestamp for the range of Anomaly data to retrieve.\
          \  \nFormat 'YYYY-MM-DDTHH:MM:SSZ'.  \nDefaults to 12 hours before the current\
          \ time if not provided.\n"
        schema:
          type: string
      - name: end_time
        in: query
        description: "The end timestamp for the range of Anomaly data to retrieve.\
          \  \nFormat YYYY-MM-DDTHH:MM:SSZ.  \nDefaults to the current time if not\
          \ provided.\n"
        schema:
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyAnomalyDetectionHistoryResponse'
      deprecated: false
  /api/o11y/insight/anomaly-detection/{settingSeq}:
    post:
      tags:
      - "[Insight] Anomaly Detection"
      summary: PostAnomalyDetection
      description: Request anomaly detection
      operationId: PostAnomalyDetection
      parameters:
      - name: settingSeq
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyVoid'
      deprecated: false
  /api/o11y/insight/predictions/options:
    get:
      tags:
      - "[Insight] Prediction"
      summary: GetPredictionOptions
      description: "Fetch the available target types, metric types, and prediction\
        \ range options for the prediction API."
      operationId: GetPredictionOptions
      responses:
        "200":
          description: Successful retrieval of prediction options
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyPredictionOptions'
              example:
                data:
                  target_types:
                  - vm
                  - mci
                  measurements:
                  - cpu
                  - mem
                  - disk
                  - system load
                  prediction_ranges:
                    min: 1h
                    max: 2160h
                rs_code: "200"
                rs_msg: Success
      deprecated: false
  /api/o11y/insight/predictions/nsId/{nsId}/target/{targetId}:
    post:
      tags:
      - "[Insight] Prediction"
      summary: PostPrediction
      description: "Predict future metrics (cpu, mem, disk, system load) for a given\
        \ vm or mci group.\n(measurememt : field) Relationships are as follows.  \n\
        cpu : usage_idle  \nmem : used_percent  \ndisk : used_percent  \nsystem load\
        \ : load1\n"
      operationId: PostPrediction
      parameters:
      - name: nsId
        in: path
        description: The Namespace ID for the prediction.
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        description: The ID of the target vm or mci group.
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        schema:
          type: string
          enum:
          - application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionBody'
        required: true
      responses:
        "200":
          description: Successful prediction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyPredictionResult'
              example:
                data:
                  ns_id: string
                  target_id: string
                  measurement: cpu
                  target_type: VM
                  values:
                  - timestamp: 2024-08-22T00:00:00Z
                    value: 75
                  - timestamp: 2024-08-22T01:00:00Z
                    value: 78
                  - timestamp: 2024-08-22T02:00:00Z
                    value: 80
                rs_code: "200"
                rs_msg: Success
      deprecated: false
      x-codegen-request-body-name: body
  /api/o11y/insight/predictions/nsId/{nsId}/target/{targetId}/history:
    get:
      tags:
      - "[Insight] Prediction"
      summary: GetPredictionHistory
      description: Get previously stored prediction data for a specific vm or mci
        group.
      operationId: GetPredictionHistory
      parameters:
      - name: nsId
        in: path
        description: The Namespace ID for the prediction.
        required: true
        schema:
          type: string
      - name: targetId
        in: path
        description: The ID of the target vm or mci group.
        required: true
        schema:
          type: string
      - name: measurement
        in: query
        description: The type of metric to retrieve.
        required: true
        schema:
          type: string
          enum:
          - cpu
          - mem
          - disk
          - system load
      - name: start_time
        in: query
        description: "The start timestamp for the range of prediction data to retrieve.\
          \  \nFormat YYYY-MM-DDTHH:MM:SSZ.  \nDefaults to the current time if not\
          \ provided.\n"
        schema:
          type: string
      - name: end_time
        in: query
        description: "The end timestamp for the range of prediction data to retrieve.\
          \ \nFormat YYYY-MM-DDTHH:MM:SSZ. \nDefaults to 7 days after the current\
          \ time if not provided.\n"
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved prediction history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResBodyPredictionHistory'
              example:
                data:
                  ns_id: string
                  target_id: string
                  measurement: cpu
                  values:
                  - timestamp: 2024-08-22T00:00:00Z
                    value: 50
                  - timestamp: 2024-08-22T01:00:00Z
                    value: 55
                  - timestamp: 2024-08-22T02:00:00Z
                    value: 60
                rs_code: "200"
                rs_msg: Success
      deprecated: false
components:
  schemas:
    ResBody:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: object
          description: Response data
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    ResBodyVoid:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: object
          description: Response data
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    TargetInfo:
      type: object
      properties:
        ns_id:
          type: string
        mci_id:
          type: string
        id:
          type: string
        name:
          type: string
        alias_name:
          type: string
        description:
          type: string
        state:
          type: string
    ConditionInfo:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    LogsInfo:
      type: object
      properties:
        opensearch_seq:
          type: integer
          format: int64
        range:
          type: string
        limit:
          type: integer
          format: int64
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ConditionInfo'
    ResBodyListMapStringObject:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            type: object
            additionalProperties:
              type: object
              description: Response data
            description: Response data
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    MetricInfo:
      type: object
      properties:
        name:
          type: string
          description: Measurement name
        columns:
          type: array
          description: Column name of values index
          items:
            type: string
            description: Column name of values index
        tags:
          type: object
          additionalProperties:
            type: string
            description: tag list of metric
          description: tag list of metric
        values:
          type: array
          description: Sequence by monitoring item
          items:
            type: array
            description: Sequence by monitoring item
            items:
              type: object
              description: Sequence by monitoring item
      description: Metric information
    ResBodyListMetricInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/MetricInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    FieldInfo:
      type: object
      properties:
        function:
          type: string
        field:
          type: string
      example:
      - function: mean
        field: usage_idle
    MetricsInfo:
      required:
      - influx_db_seq
      - measurement
      - range
      type: object
      properties:
        influx_db_seq:
          type: integer
          format: int64
          example: 1
        measurement:
          type: string
          example: cpu
        range:
          type: string
          description: "timeunit s,m,h,d(second, minute, hour, day)"
          example: 1h
        group_time:
          type: string
          description: "timeunit s,m,h,d(second, minute, hour, day)"
          example: 1h
        group_by:
          type: array
          example:
          - uuid
          - cpu
          items:
            type: string
            example: "[\"uuid\",\"cpu\"]"
        limit:
          type: integer
          format: int64
          example: 10
        fields:
          type: array
          example:
          - function: mean
            field: usage_idle
          items:
            $ref: '#/components/schemas/FieldInfo'
        conditions:
          type: array
          example:
          - key: cpu
            value: cpu-total
          items:
            $ref: '#/components/schemas/ConditionInfo'
    ResBodyListTargetInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/TargetInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    ResBodyTargetInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          $ref: '#/components/schemas/TargetInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    MonitoringConfigInfo:
      type: object
      properties:
        seq:
          type: integer
          format: int64
        ns_id:
          type: string
        mci_id:
          type: string
        target_id:
          type: string
        name:
          type: string
        state:
          type: string
        plugin_seq:
          type: integer
          format: int64
        plugin_name:
          type: string
        plugin_type:
          type: string
        plugin_config:
          type: string
      description: Response data
    ResBodyListMonitoringConfigInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/MonitoringConfigInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    MiningDBSetDTO:
      type: object
      properties:
        url:
          type: string
        database:
          type: string
        retention_policy:
          type: string
        username:
          type: string
        password:
          type: string
      description: MiningDB information
    Data:
      type: object
      properties:
        metric_name:
          type: string
        metric_unit:
          type: string
        timestamp_values:
          type: array
          items:
            $ref: '#/components/schemas/TimestampValue'
      description: Response data
    ResBodyData:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          $ref: '#/components/schemas/Data'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    TimestampValue:
      type: object
      properties:
        timestamp:
          type: string
        value:
          type: string
    PluginDefInfo:
      type: object
      properties:
        seq:
          type: integer
          description: Plugin identify sequence number
          format: int64
        name:
          type: string
          description: Plugin name
        plugin_id:
          type: string
          description: Plugin ID
        plugin_type:
          type: string
          description: Plugin type
      description: Response data
    ResBodyListPluginDefInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/PluginDefInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    OpensearchInfo:
      type: object
      properties:
        seq:
          type: integer
          format: int64
        url:
          type: string
        index_name:
          type: string
        username:
          type: string
        password:
          type: string
      description: Response data
    ResBodyListOpensearchInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/OpensearchInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    NS:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        name:
          type: string
        resource_type:
          type: string
        uid:
          type: string
    TumblebugNS:
      type: object
      properties:
        ns:
          type: array
          items:
            $ref: '#/components/schemas/NS'
    MiningDBInfo:
      type: object
      properties:
        url:
          type: string
        database:
          type: string
        retention_policy:
          type: string
        username:
          type: string
        password:
          type: string
      description: Response data
    ResBodyMiningDBInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          $ref: '#/components/schemas/MiningDBInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    MeasurementTagInfo:
      type: object
      properties:
        measurement:
          type: string
          description: influxDB measurement name
          example: cpu
        tags:
          type: array
          description: influxDB tag list on measurement
          example:
          - cpu
          - host
          items:
            type: string
            description: influxDB tag list on measurement
            example: "[\"cpu\",\"host\"]"
      description: InfluxDB measurement tag information
    ResBodyListMeasurementTagInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/MeasurementTagInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    MeasurementFieldInfo:
      type: object
      properties:
        measurement:
          type: string
          description: influxDB measurement name
          example: cpu
        fields:
          type: array
          description: influxDB field list on measurement
          example:
          - key: usage_guest
            type: float
          items:
            $ref: '#/components/schemas/FieldInfo'
      description: Measurement field information
    ResBodyListMeasurementFieldInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/MeasurementFieldInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    InfluxDBInfo:
      type: object
      properties:
        seq:
          type: integer
          description: Sequence number
          format: int64
        url:
          type: string
          description: Host url
          example: http://localhost:8086
        database:
          type: string
          description: Database name
          example: mc-agent
        retention_policy:
          type: string
          description: Data retention policy name
          example: autogen
        username:
          type: string
          description: Authentication username
          example: mc-agent
        password:
          type: string
          description: Authentication password
          example: mc-agent
      description: InfluxDB information
    ResBodyListInfluxDBInfo:
      type: object
      properties:
        rs_code:
          type: string
          description: Response code
        rs_msg:
          type: string
          description: Response message
        data:
          type: array
          description: Response data
          items:
            $ref: '#/components/schemas/InfluxDBInfo'
        error_message:
          type: string
          description: Error message
      description: Generic response body wrapper
    TriggerEmailUserCreateDto:
      title: TriggerEmailUserCreateDto
      type: object
      properties:
        email:
          type: string
          description: Alert Receiver Email
        name:
          type: string
          description: Trigger Alert Email User name
    ResBodyListTriggerEmailUserInfo:
      title: ResBodyListTriggerEmailUserInfo
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TriggerEmailUserInfo'
        rs_code:
          type: string
        rs_msg:
          type: string
    TriggerEmailUserInfo:
      title: TriggerEmailUserInfo
      type: object
      properties:
        email:
          type: string
          description: Alert Receiver Email
        name:
          type: string
          description: Trigger Alert Email User name
        policy_seq:
          type: integer
          description: Sequence by trigger policy
          format: int64
          example: 1
        seq:
          type: integer
          description: Sequence by Trigger Email User
          format: int64
          example: 1
    ResBodyListTriggerSlackUserInfo:
      title: ResBodyListTriggerSlackUserInfo
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TriggerSlackUserInfo'
        rs_code:
          type: string
        rs_msg:
          type: string
    TriggerSlackUserCreateDto:
      title: TriggerSlackUserCreateDto
      type: object
      properties:
        channel:
          type: string
          description: Base64 Encoded value
        name:
          type: string
          description: Trigger Alert Slack User name
        token:
          type: string
          description: Base64 Encoded value
    TriggerSlackUserInfo:
      title: TriggerSlackUserInfo
      type: object
      properties:
        channel:
          type: string
          description: Base64 Encoded value
        name:
          type: string
          description: Trigger Alert Slack User name
        policy_seq:
          type: integer
          description: Sequence by trigger policy
          format: int64
          example: 1
        seq:
          type: integer
          description: Sequence by Trigger Slack User
          format: int64
          example: 1
        token:
          type: string
          description: Base64 Encoded value
    ResBodyListTriggerHistoryInfo:
      title: ResBodyListTriggerHistoryInfo
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TriggerHistoryInfo'
        rs_code:
          type: string
        rs_msg:
          type: string
    TriggerHistoryInfo:
      title: TriggerHistoryInfo
      type: object
      properties:
        create_at:
          type: string
          description: The time when the history was inserted into the database
          example: 2024-05-24T11:31:55Z
        data:
          type: string
          description: Trigger event alarm details
        level:
          type: string
          description: Trigger event level
        measurement:
          type: string
          description: Trigger event target metric name
        name:
          type: string
          description: Base64 Encoded value
          example: localhost
        ns_id:
          type: string
          description: Namespace Id
        occur_time:
          type: string
          description: The time when the history occurred
        policy_seq:
          type: integer
          description: Sequence by trigger policy
          format: int64
          example: 1
        seq:
          type: integer
          description: Sequence by history
          format: int64
          example: 1
        target_id:
          type: string
          description: Vm Id
        target_seq:
          type: integer
          description: Sequence by trigger target
          format: int64
          example: 1
    ResBodyListTriggerPolicyInfo:
      title: ResBodyListTriggerPolicyInfo
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TriggerPolicyInfo'
        rs_code:
          type: string
        rs_msg:
          type: string
    TriggerPolicyInfo:
      title: TriggerPolicyInfo
      type: object
      properties:
        agent_manager_ip:
          type: string
          description: Agent Manager IP
          example: http://mc-o11y-manager:18080
        create_at:
          type: string
          description: The time when the trigger policy was registered
          example: 2024-05-24T11:31:55Z
        description:
          type: string
          description: Host description
          example: ZGVzY3JpcHRpb24=
        field:
          type: string
          description: Trigger target metric field
          example: usage_idle
        measurement:
          type: string
          description: Trigger target metric
          example: cpu
        name:
          type: string
          description: Base64 Encoded value
          example: Y3B1IHVzYWdlX2lkbGUgY2hlY2sgcG9saWN5
        seq:
          type: integer
          description: Sequence by trigger policy
          format: int64
          example: 1
        statistics:
          type: string
          description: Trigger target metric statistics
          example: min
        status:
          type: string
          description: Trigger Policy enablement status
          enum:
          - DISABLED
          - ENABLED
        threshold:
          type: string
          description: Base64 Encoded value
          example: eyJjcml0IjogInZhbHVlID4gMjAiLCAid2FybiI6ICJ2YWx1ZSA+IDUwIn0=
        update_at:
          type: string
          description: The time when the trigger policy was updated
    TriggerPolicyCreateDTO:
      title: TriggerPolicyCreateDTO
      type: object
      properties:
        description:
          type: string
          description: Host description
          example: ZGVzY3JpcHRpb24=
        field:
          type: string
          description: Trigger target metric field
          example: usage_idle
        measurement:
          type: string
          description: Trigger target metric
          enum:
          - cpu
          - disk
          - mem
        name:
          type: string
          description: Base64 Encoded value
          example: Y3B1IHBvbGljeQ==
        statistics:
          type: string
          description: Trigger target metric statistics
          example: min
        status:
          type: string
          description: Trigger Policy enablement status
          enum:
          - DISABLED
          - ENABLED
        threshold:
          type: string
          description: Base64 Encoded value
          example: eyJjcml0IjogInZhbHVlID4gMjAiLCAid2FybiI6ICJ2YWx1ZSA+IDUwIn0=
    TriggerPolicyUpdateDto:
      title: TriggerPolicyUpdateDto
      type: object
      properties:
        description:
          type: string
          description: Host description
          example: ZGVzY3JpcHRpb24=
        field:
          type: string
          description: Trigger target metric field
          example: usage_idle
        measurement:
          type: string
          description: Trigger target metric
          example: cpu
        name:
          type: string
          description: Base64 Encoded value
          example: Y3B1IHBvbGljeQ==
        statistics:
          type: string
          description: Trigger target metric statistics
          example: min
        status:
          type: string
          description: Trigger Policy enablement status
          enum:
          - DISABLED
          - ENABLED
        threshold:
          type: string
          description: Base64 Encoded value
          example: eyJjcml0IjogInZhbHVlID4gMjAiLCAid2FybiI6ICJ2YWx1ZSA+IDUwIn0=
    ResBodyListTriggerTargetInfo:
      title: ResBodyListTriggerTargetInfo
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TriggerTargetInfo'
        rs_code:
          type: string
        rs_msg:
          type: string
    TriggerTargetInfo:
      type: object
      properties:
        alias_name:
          type: string
          description: Host Alias Name
          example: test-vm
        create_at:
          type: string
          description: The time when the trigger target was registered
          example: 2024-05-24T11:31:55Z
        name:
          type: string
          description: Host name
          example: vm1
        ns_id:
          type: string
          description: Namespace Id
        policy_seq:
          type: integer
          description: Sequence by trigger policy
          format: int64
          example: 1
        seq:
          type: integer
          description: Sequence by trigger target
          format: int64
          example: 1
        targetId:
          type: string
    AnomalyDetectionHistoryResponse:
      title: AnomalyDetectionHistoryResponse
      required:
      - measurement
      - ns_id
      - target_id
      - values
      type: object
      properties:
        ns_id:
          type: string
          description: The Namespace ID.
        target_id:
          type: string
          description: The ID of the target (VM ID or MCI ID).
        measurement:
          type: string
          description: "The type of metric being monitored for anomalies (e.g., cpu,\
            \ mem)."
          example: cpu
        values:
          type: array
          description: List of anomaly detection results for the given time range.
          items:
            $ref: '#/components/schemas/AnomalyDetectionHistoryValue'
    AnomalyDetectionHistoryValue:
      title: AnomalyDetectionHistoryValue
      required:
      - anomaly_score
      - isAnomaly
      - timestamp
      - value
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp for the anomaly detection result.
          example: 2024-10-10T06:08:00Z
        anomaly_score:
          type: number
          description: The anomaly score for the corresponding timestamp.
          format: double
          example: 0.85
        isAnomaly:
          type: integer
          description: Whether the data point is considered an anomaly (1) or normal
            (0).
          format: int32
          example: 1
        value:
          type: number
          description: The original monitoring data value for the corresponding timestamp.
          format: double
          example: 99.5
    AnomalyDetectionOptions:
      title: AnomalyDetectionOptions
      required:
      - execution_intervals
      - measurements
      - target_types
      type: object
      properties:
        target_types:
          type: array
          items:
            type: string
        measurements:
          type: array
          items:
            type: string
        execution_intervals:
          type: array
          items:
            type: string
    AnomalyDetectionSettings:
      title: AnomalyDetectionSettings
      required:
      - create_at
      - execution_interval
      - last_execution
      - measurement
      - ns_id
      - seq
      - target_id
      - target_type
      type: object
      properties:
        seq:
          type: integer
          format: int32
          example: 1
        ns_id:
          type: string
          example: ns01
        target_id:
          type: string
          example: vm01
        target_type:
          type: string
          example: vm
        measurement:
          type: string
          example: cpu
        execution_interval:
          type: string
          example: 5m
        last_execution:
          type: string
          example: 2024-10-10T06:08:48Z
        create_at:
          type: string
          example: 2024-10-10T03:08:48Z
    AnomalyDetectionTargetRegistration:
      title: AnomalyDetectionTargetRegistration
      required:
      - execution_interval
      - measurement
      - ns_id
      - target_id
      - target_type
      type: object
      properties:
        ns_id:
          type: string
        target_id:
          type: string
        target_type:
          type: object
          allOf:
          - $ref: '#/components/schemas/TargetType'
          - type: object
            description: The type of the target (vm or mci).
            example: vm
        measurement:
          type: object
          allOf:
          - $ref: '#/components/schemas/MetricType'
          - type: object
            description: The type of metric being monitored for anomalies (cpu or
              mem)
            example: cpu
        execution_interval:
          type: object
          allOf:
          - $ref: '#/components/schemas/ExecutionInterval'
          - type: object
            description: "The interval at which anomaly detection runs (5m, 10m, 30m)"
            example: 5m
    AnomalyDetectionTargetUpdate:
      title: AnomalyDetectionTargetUpdate
      required:
      - execution_interval
      type: object
      properties:
        execution_interval:
          type: object
          allOf:
          - $ref: '#/components/schemas/ExecutionInterval'
          - type: object
            description: "The interval at which anomaly detection runs (5m, 10m, 30m)"
            example: 5m
    ExecutionInterval:
      title: ExecutionInterval
      type: string
      description: An enumeration.
      enum:
      - 5m
      - 10m
      - 30m
    HistoryValue:
      title: HistoryValue
      required:
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
        value:
          type: number
          format: double
    Measurement:
      title: Measurement
      type: string
      description: An enumeration.
      enum:
      - cpu
      - mem
    PredictValue:
      title: PredictValue
      required:
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
        value:
          type: number
          format: double
    PredictionBody:
      title: PredictionBody
      required:
      - measurement
      - prediction_range
      - target_type
      type: object
      properties:
        target_type:
          type: string
          description: The type of the target (vm or mci).
          example: vm
        measurement:
          type: object
          allOf:
          - $ref: '#/components/schemas/PredictionMetricType'
          - type: object
            description: "The type of metric being monitored for predictions(cpu,\
              \ mem, disk, system load)"
            example: cpu
        prediction_range:
          type: string
          description: "Data prediction range as of now (1h~2,160h)"
          example: 24h
    PredictionHistory:
      title: PredictionHistory
      required:
      - measurement
      - ns_id
      - target_id
      - values
      type: object
      properties:
        ns_id:
          type: string
        target_id:
          type: string
        measurement:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/HistoryValue'
    PredictionMetricType:
      title: PredictionMetricType
      type: string
      description: An enumeration.
      enum:
      - cpu
      - mem
      - disk
      - system load
    PredictionOptions:
      title: PredictionOptions
      required:
      - measurements
      - prediction_ranges
      - target_types
      type: object
      properties:
        target_types:
          type: array
          items:
            type: string
        measurements:
          type: array
          items:
            type: string
        prediction_ranges:
          type: object
          additionalProperties:
            type: string
    PredictionResult:
      title: PredictionResult
      required:
      - measurement
      - ns_id
      - target_id
      - target_type
      - values
      type: object
      properties:
        ns_id:
          type: string
        target_id:
          type: string
        measurement:
          type: string
        target_type:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/PredictValue'
    ResBodyAnomalyDetectionHistoryResponse:
      title: ResBodyAnomalyDetectionHistoryResponse
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AnomalyDetectionHistoryResponse'
        rs_code:
          type: string
          description: Response code
          default: "200"
        rs_msg:
          type: string
          description: Response message
          default: Success
    ResBodyAnomalyDetectionOptions:
      title: ResBodyAnomalyDetectionOptions
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AnomalyDetectionOptions'
        rs_code:
          type: string
          default: "200"
        rs_msg:
          type: string
          default: Success
    ResBodyAnomalyDetectionSettings:
      title: ResBodyAnomalyDetectionSettings
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AnomalyDetectionSettings'
        rs_code:
          type: string
          default: "200"
        rs_msg:
          type: string
          default: Success
    ResBodyPredictionHistory:
      title: ResBodyPredictionHistory
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PredictionHistory'
        rs_code:
          type: string
          default: "200"
        rs_msg:
          type: string
          default: Success
    ResBodyPredictionOptions:
      title: ResBodyPredictionOptions
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PredictionOptions'
        rs_code:
          type: string
          default: "200"
        rs_msg:
          type: string
          default: Success
    ResBodyPredictionResult:
      title: ResBodyPredictionResult
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PredictionResult'
        rs_code:
          type: string
          default: "200"
        rs_msg:
          type: string
          default: Success
    TargetType:
      title: TargetType
      type: string
      description: An enumeration.
      enum:
      - vm
      - mci
    MetricType:
      title: MetricType
      type: string
      description: An enumeration.
      enum:
      - cpu
      - mem

x-original-swagger-version: "2.0"
