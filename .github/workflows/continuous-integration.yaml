name: Continuous Integration (CI)
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - "java-module/**.md"
      - "java-module/conf/**"
      - "java-module/.env.sample"
      - "java-module/swagger/**"
      - "**.md"
      - "LICENSE"
      - ".gitignore"
      - "go/**"
      - "python/**"
jobs:
  build-source-chk:
    name: Check source code
    strategy:
      matrix:
        os: [ubuntu-22.04]
    runs-on: ${{matrix.os}}
    steps:
      - name: Remove unused data
        run: docker system prune -a -f

      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Test build & image create
        run: echo 'gradle build & docker build'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: grant execute permission for gradlew
        run: chmod +x java-module/gradlew
        shell: bash

      - name: Build with Gradle Wrapper
        run: java-module/gradlew -p java-module test

  build-source-and-container-image:
    name: Build a container image
    runs-on: ubuntu-22.04
    needs: build-source-chk
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: grant execute permission for gradlew
        run: chmod +x java-module/gradlew
        shell: bash

      - name: Build with Gradle Wrapper
        run: java-module/gradlew -p java-module clean build --stacktrace

      - name: chk directory
        run: ls -al

      - name: Build image (Observability-Manager)
        env:
          IMAGE_NAME: mc-observability
        run: docker build . --file java-module/Dockerfile --tag $IMAGE_NAME
#
#      - name: Build image (Observability-Agent)
#        env:
#          IMAGE_NAME: mc-observability-agent
#        run: docker build . --file java-module/mc-o11y-agent/Dockerfile --tag $IMAGE_NAME