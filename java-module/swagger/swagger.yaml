swagger: '2.0'
info:
  description: Api Documentation
  version: '0.2.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:18080
basePath: /
paths:
  /api/o11y/monitoring/plugins:
    get:
      tags:
        - '[System] environment'
      summary: Get all available monitoring plugin list
      operationId: GET_plugins
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<PluginDefInfo>>'
  /api/o11y/monitoring/target:
    get:
      tags:
        - '[Target] Monitoring target management'
      summary: Get all mc-observability management target list
      operationId: GET_targets
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<TargetInfo>>'
  /api/o11y/monitoring/{nsId}/{mciId}/target:
    get:
      tags:
        - '[Target] Monitoring target management'
      summary: Get all mc-observability management target list in specified NS and MCI
      operationId: GET_targets_ns_mci
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<TargetInfo>>'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}:
    get:
      tags:
        - '[Target] Monitoring target management'
      summary: Get monitoring target
      operationId: GET_target
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<TargetInfo>'
    post:
      tags:
        - '[Target] Monitoring target management'
      summary: Add new monitoring target (MC-O11y-Agent Install)
      operationId: POST_target
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: targetInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/TargetCreateDTO'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
    put:
      tags:
        - '[Target] Monitoring target management'
      summary: Update target information
      operationId: PUT_target
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: targetInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/TargetUpdateDTO'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
    delete:
      tags:
        - '[Target] Monitoring target management'
      summary: Delete monitoring agent & management target
      operationId: DELETE_target
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/item:
    get:
      tags:
        - '[Monitoring item] Monitoring target item management'
      summary: Get all target monitoring item list
      operationId: GET_items
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<ItemInfo>>'
    post:
      tags:
        - '[Monitoring item] Monitoring target item management'
      summary: Add target monitoring item
      operationId: POST_items
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: itemInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemCreateDTO'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
    put:
      tags:
        - '[Monitoring item] Monitoring target item management'
      summary: Update target monitoring item
      operationId: PUT_items
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: itemInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/ItemUpdateDTO'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/item/{itemSeq}:
    delete:
      tags:
        - '[Monitoring item] Monitoring target item management'
      summary: Delete target monitoring item
      operationId: DELETE_items
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: itemSeq
          in: path
          required: true
          type: integer
          format: int64
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/storage:
    get:
      tags:
        - '[Monitoring storage] Monitoring target storage management'
      summary: Get all target monitoring storage list
      operationId: GET_storages
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<StorageInfo>>'
    post:
      tags:
        - '[Monitoring storage] Monitoring target storage management'
      summary: Add target monitoring storage
      operationId: POST_storages
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: storageInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/StorageCreateDTO'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
    put:
      tags:
        - '[Monitoring storage] Monitoring target storage management'
      summary: Update target monitoring storage
      operationId: PUT_storages
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: storageInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/StorageUpdateDTO'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/storage/{storageSeq}:
    delete:
      tags:
        - '[Monitoring storage] Monitoring target storage management'
      summary: Delete target monitoring storage
      operationId: DELETE_storages
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: storageSeq
          in: path
          required: true
          type: integer
          format: int64
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/monitoring/{nsId}/{mciId}/target/{targetId}/csp/{metricType}:
    get:
      tags:
        - '[Monitoring CSP] Monitoring target from the CSP'
      summary: Get target monitoring data from the CSP
      operationId: GET_CSP
      parameters:
        - name: nsId
          in: path
          required: true
          type: string
        - name: mciId
          in: path
          required: true
          type: string
        - name: targetId
          in: path
          required: true
          type: string
        - name: metricType
          in: path
          required: true
          type: string
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<SpiderMonitoringInfo.Data>'
  /api/o11y/monitoring/influxdb:
    get:
      tags:
        - '[Monitoring metric] Monitoring metric'
      summary: Get all InfluxDB list
      operationId: GET_InfluxDBs
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<InfluxDBInfo>>'
  /api/o11y/monitoring/influxdb/{influxDBSeq}/measurement:
    get:
      tags:
        - '[Monitoring metric] Monitoring metric'
      summary: Get collected measurement & field list
      operationId: GET_InfluxDBInfo
      parameters:
        - name: influxDBSeq
          in: path
          required: true
          type: integer
          format: int64
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<MeasurementFieldInfo>>'
  /api/o11y/monitoring/influxdb/{influxDBSeq}/tag:
    get:
      tags:
        - '[Monitoring metric] Monitoring metric'
      summary: Get collected metric tag list
      operationId: GET_InfluxDBTag
      parameters:
        - name: influxDBSeq
          in: path
          required: true
          type: integer
          format: int64
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<Map<string%2Cobject>>>'
  /api/o11y/monitoring/influxdb/{influxDBSeq}/metric:
    post:
      tags:
        - '[Monitoring metric] Monitoring metric'
      summary: Get collected metric
      operationId: GET_Metric
      parameters:
        - name: influxDBSeq
          in: path
          required: true
          type: integer
          format: int64
        - name: metricsInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetricsInfo'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<MetricInfo>>'
  /api/o11y/monitoring/opensearch:
    get:
      tags:
        - '[Monitoring log] Monitoring log'
      summary: Get all Opensearch list
      operationId: GET_Opensearchs
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<OpensearchInfo>>'
  /api/o11y/monitoring/opensearch/{opensearchSeq}/logs:
    get:
      tags:
        - '[Monitoring log] Monitoring log'
      summary: Get collected log
      operationId: GET_OpensearchLogs
      parameters:
        - name: opensearchSeq
          in: path
          required: true
          type: integer
          format: int64
        - name: logsInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/LogsInfo'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<Map<string%2Cobject>>>'
  /api/o11y/monitoring/miningdb:
    get:
      tags:
        - '[Mining InfluxDB] Monitoring metric downsampling'
      summary: Get mining influxdb detail
      operationId: GET_miningdb
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<MiningDBInfo>'
    put:
      tags:
        - '[Mining InfluxDB] Monitoring metric downsampling'
      summary: Update mining influxdb info
      operationId: PUT_miningdb
      parameters:
        - name: info
          in: body
          required: true
          schema:
            $ref: '#/definitions/MiningDBInfo'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/monitoring/miningdb/measurement:
    get:
      tags:
        - '[Mining InfluxDB] Monitoring metric downsampling'
      summary: Get downsampling measurement & field list
      operationId: GET_MiningDBInfo
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<MeasurementFieldInfo>>'
  /api/o11y/monitoring/miningdb/tag:
    get:
      tags:
        - '[Mining InfluxDB] Monitoring metric downsampling'
      summary: Get downsampling metric tag list
      operationId: GET_MiningDBTag
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<Map<string%2Cobject>>>'
  /api/o11y/monitoring/miningdb/metric:
    post:
      tags:
        - '[Mining InfluxDB] Monitoring metric downsampling'
      summary: Get downsampling metric
      operationId: GET_MiningDB_Metric
      parameters:
        - name: metricsInfo
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetricsInfo'
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<MetricInfo>>'
  /api/o11y/trigger/policy/history:
    get:
      tags:
        - '[Metric Event] monitoring metric trigger'
      summary: Get Trigger History all list
      operationId: listUsingGET_6
      parameters:
        - name: policySeq
          in: query
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TriggerResBody«List«TriggerHistoryInfo»»'
  /api/o11y/trigger/policy:
    get:
      tags:
        - '[Metric Event] monitoring metric trigger'
      summary: Get Trigger Policy all list
      operationId: listUsingGET_4
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<TriggerPolicyInfo>>'
    post:
      tags:
        - '[Metric Event] monitoring metric trigger'
      summary: Create request Trigger Policy
      operationId: createUsingPOST_2
      parameters:
        - in: body
          name: triggerPolicyCreateDto
          description: triggerPolicyCreateDto
          required: true
          schema:
            $ref: '#/definitions/TriggerPolicyCreateDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/trigger/policy/{policySeq}:
    patch:
      tags:
        - '[Metric Event] monitoring metric trigger'
      summary: Update request Trigger Policy
      operationId: updateUsingPATCH_3
      consumes:
        - application/json
      parameters:
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
        - in: body
          name: triggerPolicyUpdateDto
          description: triggerPolicyUpdateDto
          required: true
          schema:
            $ref: '#/definitions/TriggerPolicyUpdateDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
    delete:
      tags:
        - '[Metric Event] monitoring metric trigger'
      summary: Delete request trigger policy
      operationId: deleteUsingDELETE_2
      parameters:
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/trigger/policy/target:
    get:
      tags:
        - '[Metric Event] monitoring metric trigger'
      summary: Get Trigger Target all list
      operationId: listUsingGET_5
      parameters:
        - name: policySeq
          in: query
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<List<TriggerTargetInfo>>'
  /api/o11y/trigger/policy/{policySeq}/target:
    put:
      tags:
        - '[Metric Event] monitoring metric trigger'
      summary: Set trigger target
      operationId: setTargetsUsingPUT
      consumes:
        - application/json
      parameters:
        - in: body
          name: targets
          description: targets
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                nsId:
                  type: string
                targetId:
                  type: string
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResBody<Void>'
  /api/o11y/trigger/policy/{policySeq}/alert/email:
    get:
      tags:
        - '[Metric Event] monitoring trigger event handler'
      summary: Get Trigger Alert Email User all list
      operationId: getEmailUserListUsingGET
      parameters:
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TriggerResBody«List«TriggerEmailUserInfo»»'
    post:
      tags:
        - '[Metric Event] monitoring trigger event handler'
      summary: Create request Trigger Alert Email User
      operationId: createEmailUserUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/TriggerEmailUserCreateDto'
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TriggerResBody«Void»'
  /api/o11y/trigger/policy/{policySeq}/alert/email/{seq}:
    delete:
      tags:
        - '[Metric Event] monitoring trigger event handler'
      summary: Delete Request Trigger Alert Email User
      operationId: deleteEmailUserUsingDELETE
      parameters:
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
        - name: seq
          in: path
          description: seq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TriggerResBody«Void»'
  /api/o11y/trigger/policy/{policySeq}/alert/slack:
    get:
      tags:
        - '[Metric Event] monitoring trigger event handler'
      summary: Get Trigger Alert Slack User all list
      operationId: getSlackUserListUsingGET
      parameters:
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TriggerResBody«List«TriggerSlackUserInfo»»'
    post:
      tags:
        - '[Metric Event] monitoring trigger event handler'
      summary: Create request Trigger Alert Slack User
      operationId: createSlackUserUsingPOST
      consumes:
        - application/json
      parameters:
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/TriggerSlackUserCreateDto'
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TriggerResBody«Void»'
  /api/o11y/trigger/policy/{policySeq}/alert/slack/{seq}:
    delete:
      tags:
        - '[Metric Event] monitoring trigger event handler'
      summary: Delete Request Trigger Alert Slack User
      operationId: deleteSlackUserUsingDELETE
      parameters:
        - name: policySeq
          in: path
          description: policySeq
          required: true
          type: integer
          format: int64
        - name: seq
          in: path
          description: seq
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TriggerResBody«Void»'
  /api/o11y/insight/anomaly-detection/options:
    get:
      description: Fetch the available target types, metric types, and interval options for the anomaly detection API.
      summary: GetAnomalyDetectionOptions
      tags:
      - '[Insight] Anomaly Detection'
      operationId: GetAnomalyDetectionOptions
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBodyAnomalyDetectionOptions'
          examples:
            application/json:
              data:
                target_types:
                - VM
                - MCI
                metric_types:
                - CPU
                - MEM
                execution_intervals:
                - 5m
                - 10m
                - 30m
              rsCode: '200'
              rsMsg: Success
          headers: {}
  /api/o11y/insight/anomaly-detection/settings:
    get:
      description: Fetch the current settings for all anomaly detection targets.
      summary: GetAllAnomalyDetectionSettings
      tags:
      - '[Insight] Anomaly Detection'
      operationId: GetAllAnomalyDetectionSettings
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBodyAnomalyDetectionSettings'
          headers: {}
    post:
      description: Register a target for anomaly detection and automatically schedule detection tasks.
      summary: PostAnomalyDetectionSettings
      tags:
      - '[Insight] Anomaly Detection'
      operationId: PostAnomalyDetectionSettings
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json
        type: string
        description: ''
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AnomalyDetectionTargetRegistration'
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBody<Void>'
          headers: {}
  /api/o11y/insight/anomaly-detection/settings/{settingSeq}:
    put:
      description: Modify the settings for a specific anomaly detection target, including the monitoring metric and interval.
      summary: PutAnomalyDetectionSettings
      tags:
      - '[Insight] Anomaly Detection'
      operationId: PutAnomalyDetectionSettings
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: settingSeq
        in: path
        required: true
        type: integer
        format: int32
        description: ''
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json
        type: string
        description: ''
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AnomalyDetectionTargetUpdate'
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBody<Void>'
          headers: {}
    delete:
      description: Remove a target from anomaly detection, stopping and removing any scheduled tasks.
      summary: DeleteAnomalyDetectionSettings
      tags:
      - '[Insight] Anomaly Detection'
      operationId: DeleteAnomalyDetectionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: settingSeq
        in: path
        required: true
        type: integer
        format: int32
        description: ''
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBody<Void>'
          headers: {}
  /api/o11y/insight/anomaly-detection/settings/nsId/{nsId}/target/{targetId}:
    get:
      description: Fetch the current settings for a specific anomaly detection target.
      summary: GetTargetAnomalyDetectionSettings
      tags:
      - '[Insight] Anomaly Detection'
      operationId: GetTargetAnomalyDetectionSettings
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        required: true
        type: string
        description: ''
      - name: targetId
        in: path
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBodyAnomalyDetectionSettings'
          headers: {}
  /api/o11y/insight/anomaly-detection/nsId/{nsId}/target/{targetId}/history:
    get:
      description: Fetch the results of anomaly detection for a specific target within a given time range.
      summary: GetAnomalyDetectionHistory
      tags:
      - '[Insight] Anomaly Detection'
      operationId: GetAnomalyDetectionHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        required: true
        type: string
        description: The Namespace ID for the prediction.
      - name: targetId
        in: path
        required: true
        type: string
        description: The ID of the target VM or MCI group.
      - name: metric_type
        in: query
        required: true
        enum:
        - CPU
        - MEM
        type: string
        description: The type of metric to retrieve.
      - name: start_time
        in: query
        required: false
        type: string
        format: date-time
        description: The start timestamp for the range of prediction data to retrieve. Defaults to 7 days before the current time if not provided.
      - name: end_time
        in: query
        required: false
        type: string
        format: date-time
        description: The end timestamp for the range of prediction data to retrieve. Defaults to the current time if not provided.
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBodyAnomalyDetectionHistoryResponse'
          headers: {}
  /api/o11y/insight/anomaly-detection/{settingSeq}:
    post:
      description: Request anomaly detection
      summary: PostAnomalyDetection
      tags:
      - '[Insight] Anomaly Detection'
      operationId: PostAnomalyDetection
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: settingSeq
        in: path
        required: true
        type: integer
        format: int32
        description: ''
      responses:
        '200':
          description: Successful Response
          schema:
            $ref: '#/definitions/ResBody<Void>'
          headers: {}
  /api/o11y/insight/predictions/options:
    get:
      description: Fetch the available target types, metric types, and prediction range options for the prediction API.
      summary: GetPredictionOptions
      tags:
      - '[Insight] Prediction'
      operationId: GetPredictionOptions
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: Successful retrieval of prediction options
          schema:
            $ref: '#/definitions/ResBodyPredictionOptions'
          examples:
            application/json:
              data:
                target_types:
                - VM
                - MCI
                metric_types:
                - CPU
                - MEM
                - Disk
                - System Load
                prediction_ranges:
                  min: 1h
                  max: 2160h
              rsCode: '200'
              rsMsg: Success
          headers: {}
  /api/o11y/insight/predictions/nsId/{nsId}/target/{targetId}:
    post:
      description: Predict future metrics (CPU, MEM, Disk, System Load) for a given VM or MCI group.
      summary: PostPrediction
      tags:
      - '[Insight] Prediction'
      operationId: PostPrediction
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: nsId
        in: path
        required: true
        type: string
        description: The Namespace ID for the prediction.
      - name: targetId
        in: path
        required: true
        type: string
        description: The ID of the target VM or MCI group.
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/json
        type: string
        description: ''
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/PredictionBody'
      responses:
        '200':
          description: Successful prediction response
          schema:
            $ref: '#/definitions/ResBodyPredictionResult'
          examples:
            application/json:
              data:
                nsId: string
                targetId: string
                metric_type: CPU
                target_type: VM
                values:
                - timestamp: 2024-08-22T00:00:00Z
                  predicted_value: 75
                - timestamp: 2024-08-22T01:00:00Z
                  predicted_value: 78
                - timestamp: 2024-08-22T02:00:00Z
                  predicted_value: 80
              rsCode: '200'
              rsMsg: Success
          headers: {}
  /api/o11y/insight/predictions/nsId/{nsId}/target/{targetId}/history:
    get:
      description: Get previously stored prediction data for a specific VM or MCI group.
      summary: GetPredictionHistory
      tags:
      - '[Insight] Prediction'
      operationId: GetPredictionHistory
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: nsId
        in: path
        required: true
        type: string
        description: The Namespace ID for the prediction.
      - name: targetId
        in: path
        required: true
        type: string
        description: The ID of the target VM or MCI group.
      - name: metric_type
        in: query
        required: true
        enum:
        - CPU
        - MEM
        - Disk
        - System Load
        type: string
        description: The type of metric to retrieve.
      - name: start_time
        in: query
        required: false
        type: string
        format: date-time
        description: The start timestamp for the range of prediction data to retrieve. Defaults to the current time if not provided.
      - name: end_time
        in: query
        required: false
        type: string
        format: date-time
        description: The end timestamp for the range of prediction data to retrieve. Defaults to 7 days after the current time if not provided.
      responses:
        '200':
          description: Successfully retrieved prediction history
          schema:
            $ref: '#/definitions/ResBodyPredictionHistory'
          examples:
            application/json:
              data:
                nsId: string
                targetId: string
                metric_type: CPU
                values:
                - timestamp: 2024-08-22T00:00:00Z
                  predicted_value: 50
                - timestamp: 2024-08-22T01:00:00Z
                  predicted_value: 55
                - timestamp: 2024-08-22T02:00:00Z
                  predicted_value: 60
              rsCode: '200'
              rsMsg: Success
          headers: {}
definitions:
  ResBody<List<PluginDefInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/PluginDefInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<PluginDefInfo>>
  PluginDefInfo:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      name:
        type: string
      pluginId:
        type: string
      pluginType:
        type: string
    title: PluginDefInfo
  ResBody<List<TargetInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TargetInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<TargetInfo>>
  ResBody<TargetInfo>:
    type: object
    properties:
      data:
        type: object
        items:
          $ref: '#/definitions/TargetInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<TargetInfo>
  TargetInfo:
    type: object
    properties:
      id:
        type: string
        description: target ID
      description:
        type: string
        description: target description (Base64 encoded value)
      nsId:
        type: string
        description: namespace ID
      name:
        type: string
      aliasName:
        type: string
        description: target alias name (Base64 encoded value)
      state:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
    title: TargetInfo
  ResBody<Void>:
    type: object
    properties:
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<Void>
  TargetCreateDTO:
    type: object
    properties:
      description:
        type: string
        description: target description (Base64 encoded value)
      aliasName:
        type: string
        description: target alias name (Base64 encoded value)
    title: TargetCreateDTO
  TargetUpdateDTO:
    type: object
    properties:
      description:
        type: string
        description: target description (Base64 encoded value)
      aliasName:
        type: string
        description: target alias name (Base64 encoded value)
    title: TargetUpdateDTO
  ResBody<List<ItemInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ItemInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<ItemInfo>>
  ItemInfo:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      name:
        type: string
        description: Base64 Encoded value
      pluginName:
        type: string
      pluginSeq:
        type: integer
        format: int64
      pluginConfig:
        type: string
        description: Base64 Encoded value
    title: ItemInfo
  ItemCreateDTO:
    type: object
    properties:
      name:
        type: string
        description: Base64 Encoded value
      pluginSeq:
        type: integer
        format: int64
      pluginConfig:
        type: string
        description: Base64 Encoded value
    title: ItemCreateDTO
  ItemUpdateDTO:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      name:
        type: string
        description: Base64 Encoded value
      pluginConfig:
        type: string
        description: Base64 Encoded value
    title: ItemUpdateDTO
  ResBody<List<StorageInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/StorageInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<StorageInfo>>
  StorageInfo:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      name:
        type: string
        description: Base64 Encoded value
      pluginName:
        type: string
      pluginSeq:
        type: integer
        format: int64
      pluginConfig:
        type: string
        description: Base64 Encoded value
    title: StorageInfo
  StorageCreateDTO:
    type: object
    properties:
      name:
        type: string
        description: Base64 Encoded value
      pluginSeq:
        type: integer
        format: int64
      pluginConfig:
        type: string
        description: Base64 Encoded value
    title: StorageCreateDTO
  StorageUpdateDTO:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      name:
        type: string
        description: Base64 Encoded value
      pluginConfig:
        type: string
        description: Base64 Encoded value
    title: StorageUpdateDTO
  ResBody<List<InfluxDBInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/InfluxDBInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<InfluxDBInfo>>
  InfluxDBInfo:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      url:
        type: string
      database:
        type: string
      retentionPolicy:
        type: string
      username:
        type: string
      password:
        type: string
    title: InfluxDBInfo
  SpiderMonitoringInfo.Data:
    type: object
    properties:
      metricName:
        type: string
      metricUnit:
        type: string
      timestampValues:
        type: array
        example:
          - timestamp: '2024-09-20T02:01:00Z'
            value: '0.445'
        items:
          $ref: '#/definitions/TimestampValue'
      retentionPolicy:
        type: string
      username:
        type: string
      password:
        type: string
    title: SpiderMonitoringInfo.Data
  ResBody<SpiderMonitoringInfo.Data>:
    type: object
    properties:
      data:
        type: object
        items:
          $ref: '#/definitions/SpiderMonitoringInfo.Data'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<SpiderMonitoringInfo.Data>
  TimestampValue:
    type: object
    properties:
      timestamp:
        type: string
      value:
        type: string
    title: TimestampValue
  ResBody<List<MeasurementFieldInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MeasurementFieldInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<MeasurementFieldInfo>>
  MeasurementFieldInfo:
    type: object
    properties:
      fields:
        type: array
        items:
          $ref: '#/definitions/FieldInfo'
      measurement:
        type: string
    title: MeasurementFieldInfo
  FieldInfo:
    type: object
    properties:
      fieldKey:
        type: string
      fieldType:
        type: string
    title: FieldInfo
  ResBody<List<Map<string,object>>>:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<Map<string,object>>>
  MetricsInfo:
    type: object
    required:
      - measurement
      - range
    properties:
      conditions:
        type: array
        example:
          - key: cpu
            value: cpu-total
        items:
          $ref: '#/definitions/ConditionInfo'
      fields:
        type: array
        example:
          - function: mean
            field: usage_idle
        items:
          $ref: '#/definitions/FieldFunctionInfo'
      groupBy:
        type: array
        example:
          - uuid
          - cpu
        items:
          type: string
      groupTime:
        type: string
        example: 1h
        description: timeunit s,m,h,d(second, minute, hour, day)
      limit:
        type: integer
        format: int64
        example: 10
      measurement:
        type: string
        example: cpu
      range:
        type: string
        example: 1h
        description: timeunit s,m,h,d(second, minute, hour, day)
    title: MetricsInfo
  ConditionInfo:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
    title: ConditionInfo
  FieldFunctionInfo:
    type: object
    properties:
      field:
        type: string
      function:
        type: string
    title: FieldFunctionInfo
  ResBody<List<MetricInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MetricInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<MetricInfo>>
  MetricInfo:
    type: object
    properties:
      columns:
        type: array
        items:
          type: string
      name:
        type: string
      tags:
        type: object
        additionalProperties:
          type: string
      values:
        type: array
        items:
          type: array
          items:
            type: object
    title: MetricInfo
  ResBody<List<OpensearchInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/OpensearchInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<OpensearchInfo>>
  OpensearchInfo:
    type: object
    properties:
      seq:
        type: integer
        format: int64
      url:
        type: string
      indexName:
        type: string
      username:
        type: string
      password:
        type: string
    title: OpensearchInfo
  LogsInfo:
    type: object
    required:
      - range
    properties:
      conditions:
        type: array
        example:
          - key: cpu
            value: cpu-total
        items:
          $ref: '#/definitions/ConditionInfo'
      limit:
        type: integer
        format: int64
        example: 10
      range:
        type: string
        example: 1h
        description: timeunit s,m,h,d(second, minute, hour, day)
    title: LogsInfo
  ResBody<MiningDBInfo>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MiningDBInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<MiningDBInfo>
  MiningDBInfo:
    type: object
    properties:
      url:
        type: string
      database:
        type: string
      retentionPolicy:
        type: string
      username:
        type: string
      password:
        type: string
    title: MiningDBInfo
  TriggerEmailUserCreateDto:
    type: object
    properties:
      email:
        type: string
        description: Alert Receiver Email
      name:
        type: string
        description: Trigger Alert Email User name
    title: TriggerEmailUserCreateDto
  TriggerResBody«Void»:
    type: object
    properties:
      rsCode:
        type: string
      rsMsg:
        type: string
    title: TriggerResBody«Void»
  TriggerResBody«List«TriggerEmailUserInfo»»:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TriggerEmailUserInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: TriggerResBody«List«TriggerEmailUserInfo»»
  TriggerEmailUserInfo:
    type: object
    properties:
      email:
        type: string
        description: Alert Receiver Email
      name:
        type: string
        description: Trigger Alert Email User name
      policySeq:
        type: integer
        format: int64
        example: 1
        description: Sequence by trigger policy
      seq:
        type: integer
        format: int64
        example: 1
        description: Sequence by Trigger Email User
    title: TriggerEmailUserInfo
  TriggerResBody«List«TriggerSlackUserInfo»»:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TriggerSlackUserInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: TriggerResBody«List«TriggerSlackUserInfo»»»
  TriggerSlackUserCreateDto:
    type: object
    properties:
      channel:
        type: string
        description: Base64 Encoded value
      name:
        type: string
        description: Trigger Alert Slack User name
      token:
        type: string
        description: Base64 Encoded value
    title: TriggerSlackUserCreateDto
  TriggerSlackUserInfo:
    type: object
    properties:
      channel:
        type: string
        description: Base64 Encoded value
      name:
        type: string
        description: Trigger Alert Slack User name
      policySeq:
        type: integer
        format: int64
        example: 1
        description: Sequence by trigger policy
      seq:
        type: integer
        format: int64
        example: 1
        description: Sequence by Trigger Slack User
      token:
        type: string
        description: Base64 Encoded value
    title: TriggerSlackUserInfo
  TriggerResBody«List«TriggerHistoryInfo»»:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TriggerHistoryInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: TriggerResBody«List«TriggerHistoryInfo»»
  TriggerHistoryInfo:
    type: object
    properties:
      createAt:
        type: string
        example: '2024-05-24 11:31:55'
        description: The time when the history was inserted into the database
      data:
        type: string
        description: Trigger event alarm details
      level:
        type: string
        description: Trigger event level
      metric:
        type: string
        description: Trigger event target metric name
      name:
        type: string
        example: localhost
        description: Base64 Encoded value
      nsId:
        type: string
        description: Namespace Id
      occurTime:
        type: string
        description: The time when the history occurred
      policySeq:
        type: integer
        format: int64
        example: 1
        description: Sequence by trigger policy
      seq:
        type: integer
        format: int64
        example: 1
        description: Sequence by history
      targetId:
        type: string
        description: Vm Id
      targetSeq:
        type: integer
        format: int64
        example: 1
        description: Sequence by trigger target
    title: TriggerHistoryInfo
  ResBody<List<TriggerPolicyInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TriggerPolicyInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<TriggerPolicyInfo>>
  TriggerPolicyInfo:
    type: object
    properties:
      agentManagerIp:
        type: string
        example: http://localhost:18080
        description: Agent Manager IP
      createAt:
        type: string
        example: '2024-05-24 11:31:55'
        description: The time when the trigger policy was registered
      description:
        type: string
        example: ZGVzY3JpcHRpb24=
        description: Host description
      field:
        type: string
        example: usage_idle
        description: Trigger target metric field
      groupFields:
        type: array
        example:
          - cpu
        description: Fields to group the data
        items:
          type: string
      metric:
        type: string
        example: cpu
        description: Trigger target metric
      name:
        type: string
        example: Y3B1IHVzYWdlX2lkbGUgY2hlY2sgcG9saWN5
        description: Base64 Encoded value
      seq:
        type: integer
        format: int64
        example: 1
        description: Sequence by trigger policy
      statistics:
        type: string
        example: min
        description: Trigger target metric statistics
      status:
        type: string
        description: Trigger Policy enablement status
        enum:
          - DISABLED
          - ENABLED
      threshold:
        type: string
        example: eyJjcml0IjogInZhbHVlID4gMjAiLCAid2FybiI6ICJ2YWx1ZSA+IDUwIn0=
        description: Base64 Encoded value
      updateAt:
        type: string
        description: The time when the trigger policy was updated
    title: TriggerPolicyInfo
  TriggerPolicyCreateDTO:
    type: object
    properties:
      agentManagerIp:
        type: string
        example: http://localhost:18080
        description: Agent Manager IP
      description:
        type: string
        example: ZGVzY3JpcHRpb24=
        description: Host description
      field:
        type: string
        example: usage_idle
        description: Trigger target metric field
      groupFields:
        type: array
        example:
          - cpu
        description: Fields to group the data
        items:
          type: string
      metric:
        type: string
        description: Trigger target metric
        enum:
          - cpu
          - disk
          - mem
      name:
        type: string
        example: Y3B1IHBvbGljeQ==
        description: Base64 Encoded value
      statistics:
        type: string
        example: min
        description: Trigger target metric statistics
      status:
        type: string
        description: Trigger Policy enablement status
        enum:
          - DISABLED
          - ENABLED
      threshold:
        type: string
        example: eyJjcml0IjogInZhbHVlID4gMjAiLCAid2FybiI6ICJ2YWx1ZSA+IDUwIn0=
        description: Base64 Encoded value
    title: TriggerPolicyCreateDTO
  TriggerPolicyUpdateDto:
    type: object
    properties:
      agentManagerIp:
        type: string
        example: http://localhost:18080
        description: Agent Manager IP
      description:
        type: string
        example: ZGVzY3JpcHRpb24=
        description: Host description
      field:
        type: string
        example: usage_idle
        description: Trigger target metric field
      groupFields:
        type: array
        example:
          - cpu
        description: Fields to group the data
        items:
          type: string
      metric:
        type: string
        example: cpu
        description: Trigger target metric
      name:
        type: string
        example: Y3B1IHBvbGljeQ==
        description: Base64 Encoded value
      statistics:
        type: string
        example: min
        description: Trigger target metric statistics
      status:
        type: string
        description: Trigger Policy enablement status
        enum:
          - DISABLED
          - ENABLED
      threshold:
        type: string
        example: eyJjcml0IjogInZhbHVlID4gMjAiLCAid2FybiI6ICJ2YWx1ZSA+IDUwIn0=
        description: Base64 Encoded value
    title: TriggerPolicyUpdateDto
  ResBody<List<TriggerTargetInfo>>:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TriggerTargetInfo'
      rsCode:
        type: string
      rsMsg:
        type: string
    title: ResBody<List<TriggerTargetInfo>>
  TriggerTargetInfo:
    type: object
    properties:
      aliasName:
        type: string
        example: test-vm
        description: Host Alias Name
      createAt:
        type: string
        example: '2024-05-24 11:31:55'
        description: The time when the trigger target was registered
      name:
        type: string
        example: vm1
        description: Host name
      nsId:
        type: string
        description: Namespace Id
      policySeq:
        type: integer
        format: int64
        example: 1
        description: Sequence by trigger policy
      seq:
        type: integer
        format: int64
        example: 1
        description: Sequence by trigger target
      targetId:
        type: string
  AnomalyDetectionHistoryResponse:
    title: AnomalyDetectionHistoryResponse
    type: object
    properties:
      nsId:
        description: The Namespace ID.
        type: string
      targetId:
        description: The ID of the target (VM ID or MCI ID).
        type: string
      metric_type:
        description: The type of metric being monitored for anomalies (e.g., CPU, MEM).
        example: CPU
        type: string
      values:
        description: List of anomaly detection results for the given time range.
        type: array
        items:
          $ref: '#/definitions/AnomalyDetectionHistoryValue'
    required:
    - nsId
    - targetId
    - metric_type
    - values
  AnomalyDetectionHistoryValue:
    title: AnomalyDetectionHistoryValue
    type: object
    properties:
      timestamp:
        description: The timestamp for the anomaly detection result.
        type: string
        format: date-time
      anomaly_score:
        description: The anomaly score for the corresponding timestamp.
        type: number
        format: double
      isAnomaly:
        description: Whether the data point is considered an anomaly (1) or normal (0).
        type: integer
        format: int32
      value:
        description: The original monitoring data value for the corresponding timestamp.
        type: number
        format: double
    required:
    - timestamp
    - anomaly_score
    - isAnomaly
    - value
  AnomalyDetectionOptions:
    title: AnomalyDetectionOptions
    type: object
    properties:
      target_types:
        type: array
        items:
          type: string
      metric_types:
        type: array
        items:
          type: string
      execution_intervals:
        type: array
        items:
          type: string
    required:
    - target_types
    - metric_types
    - execution_intervals
  AnomalyDetectionSettings:
    title: AnomalyDetectionSettings
    type: object
    properties:
      seq:
        type: integer
        format: int32
      nsId:
        type: string
      targetId:
        type: string
      target_type:
        type: string
      metric_type:
        type: string
      execution_interval:
        type: string
      last_execution:
        type: string
        format: date-time
      createAt:
        type: string
        format: date-time
    required:
    - seq
    - nsId
    - targetId
    - target_type
    - metric_type
    - execution_interval
    - last_execution
    - createAt
  AnomalyDetectionTargetRegistration:
    title: AnomalyDetectionTargetRegistration
    type: object
    properties:
      nsId:
        type: string
      targetId:
        type: string
      target_type:
        type: object
        allOf:
        - $ref: '#/definitions/TargetType'
        - description: The type of the target (VM or MCI).
          example: VM
      metric_type:
        type: object
        allOf:
        - $ref: '#/definitions/MetricType'
        - description: The type of metric being monitored for anomalies (CPU or MEM)
          example: CPU
      execution_interval:
        type: object
        allOf:
        - $ref: '#/definitions/ExecutionInterval'
        - description: The interval at which anomaly detection runs (5m, 10m, 30m)
          example: 5m
    required:
    - nsId
    - targetId
    - target_type
    - metric_type
    - execution_interval
  AnomalyDetectionTargetUpdate:
    title: AnomalyDetectionTargetUpdate
    type: object
    properties:
      execution_interval:
        type: object
        allOf:
        - $ref: '#/definitions/ExecutionInterval'
        - description: The interval at which anomaly detection runs (5m, 10m, 30m)
          example: 5m
    required:
    - execution_interval
  ExecutionInterval:
    title: ExecutionInterval
    description: An enumeration.
    type: string
    enum:
    - 5m
    - 10m
    - 30m
  HistoryValue:
    title: HistoryValue
    type: object
    properties:
      timestamp:
        type: string
      predicted_value:
        type: number
        format: double
    required:
    - timestamp
  MetricType:
    title: MetricType
    description: An enumeration.
    type: string
    enum:
    - CPU
    - MEM
  PredictValue:
    title: PredictValue
    type: object
    properties:
      timestamp:
        type: string
      predicted_value:
        type: number
        format: double
    required:
    - timestamp
  PredictionBody:
    title: PredictionBody
    type: object
    properties:
      target_type:
        description: The type of the target (VM or MCI).
        example: VM
        type: string
      metric_type:
        type: object
        allOf:
        - $ref: '#/definitions/PredictionMetricType'
        - description: The type of metric being monitored for predictions(CPU, MEM, Disk, System Load)
          example: CPU
      prediction_range:
        description: Data prediction range as of now (1h~2,160h)
        example: 24h
        type: string
    required:
    - target_type
    - metric_type
    - prediction_range
  PredictionHistory:
    title: PredictionHistory
    type: object
    properties:
      nsId:
        type: string
      targetId:
        type: string
      metric_type:
        type: string
      values:
        type: array
        items:
          $ref: '#/definitions/HistoryValue'
    required:
    - nsId
    - targetId
    - metric_type
    - values
  PredictionMetricType:
    title: PredictionMetricType
    description: An enumeration.
    type: string
    enum:
    - CPU
    - MEM
    - Disk
    - System Load
  PredictionOptions:
    title: PredictionOptions
    type: object
    properties:
      target_types:
        type: array
        items:
          type: string
      metric_types:
        type: array
        items:
          type: string
      prediction_ranges:
        type: object
        additionalProperties:
          type: string
    required:
    - target_types
    - metric_types
    - prediction_ranges
  PredictionResult:
    title: PredictionResult
    type: object
    properties:
      nsId:
        type: string
      targetId:
        type: string
      metric_type:
        type: string
      target_type:
        type: string
      values:
        type: array
        items:
          $ref: '#/definitions/PredictValue'
    required:
    - nsId
    - targetId
    - metric_type
    - target_type
    - values
  ResBodyAnomalyDetectionHistoryResponse:
    title: ResBodyAnomalyDetectionHistoryResponse
    type: object
    properties:
      data:
        $ref: '#/definitions/AnomalyDetectionHistoryResponse'
      rsCode:
        description: Response code
        type: string
        default: '200'
      rsMsg:
        description: Response message
        type: string
        default: Success
    required:
    - data
  ResBodyAnomalyDetectionOptions:
    title: ResBodyAnomalyDetectionOptions
    type: object
    properties:
      data:
        $ref: '#/definitions/AnomalyDetectionOptions'
      rsCode:
        type: string
        default: '200'
      rsMsg:
        type: string
        default: Success
    required:
    - data
  ResBodyAnomalyDetectionSettings:
    title: ResBodyAnomalyDetectionSettings
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/AnomalyDetectionSettings'
      rsCode:
        type: string
        default: '200'
      rsMsg:
        type: string
        default: Success
    required:
    - data
  ResBodyPredictionHistory:
    title: ResBodyPredictionHistory
    type: object
    properties:
      data:
        $ref: '#/definitions/PredictionHistory'
      rsCode:
        type: string
        default: '200'
      rsMsg:
        type: string
        default: Success
    required:
    - data
  ResBodyPredictionOptions:
    title: ResBodyPredictionOptions
    type: object
    properties:
      data:
        $ref: '#/definitions/PredictionOptions'
      rsCode:
        type: string
        default: '200'
      rsMsg:
        type: string
        default: Success
    required:
    - data
  ResBodyPredictionResult:
    title: ResBodyPredictionResult
    type: object
    properties:
      data:
        $ref: '#/definitions/PredictionResult'
      rsCode:
        type: string
        default: '200'
      rsMsg:
        type: string
        default: Success
    required:
    - data
  TargetType:
    title: TargetType
    description: An enumeration.
    type: string
    enum:
    - VM
    - MCI