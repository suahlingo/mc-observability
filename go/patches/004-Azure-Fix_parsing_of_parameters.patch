commit 64a3fb86f4a65e3776ccb185b9014eddc3016cd1
Author: ish <ish@innogrid.com>
Date:   Fri Sep 13 10:52:25 2024 +0900

    Azure: Fix parsing of parameters

diff --git a/api-runtime/rest-runtime/MonitoringRest.go b/api-runtime/rest-runtime/MonitoringRest.go
index e8e8bbcb..b44940f7 100644
--- a/api-runtime/rest-runtime/MonitoringRest.go
+++ b/api-runtime/rest-runtime/MonitoringRest.go
@@ -25,7 +25,7 @@ func GetVMMetricData(c echo.Context) error {
 
 	var req struct {
 		ConnectionName string
-		PeriodMinute   string
+		IntervalMinute string
 		TimeBeforeHour string
 	}
 
@@ -44,17 +44,22 @@ func GetVMMetricData(c echo.Context) error {
 		return echo.NewHTTPError(http.StatusInternalServerError, "Invalid Metric Type")
 	}
 
-	req.PeriodMinute = c.QueryParam("IntervalMinute")
-	if req.PeriodMinute == "" {
-		req.PeriodMinute = "1"
+	if req.IntervalMinute == "" {
+		req.IntervalMinute = c.QueryParam("IntervalMinute")
+	}
+	if req.IntervalMinute == "" {
+		req.IntervalMinute = "1"
+	}
+
+	if req.TimeBeforeHour == "" {
+		req.TimeBeforeHour = c.QueryParam("TimeBeforeHour")
 	}
-	req.TimeBeforeHour = c.QueryParam("TimeBeforeHour")
 	if req.TimeBeforeHour == "" {
 		req.TimeBeforeHour = "1"
 	}
 
 	// Call common-runtime API
-	result, err := cmrt.GetVMMetricData(req.ConnectionName, c.Param("VMName"), metricType, req.PeriodMinute, req.TimeBeforeHour)
+	result, err := cmrt.GetVMMetricData(req.ConnectionName, c.Param("VMName"), metricType, req.IntervalMinute, req.TimeBeforeHour)
 	if err != nil {
 		return echo.NewHTTPError(http.StatusInternalServerError, err.Error())
 	}
@@ -67,7 +72,7 @@ func GetClusterNodeMetricData(c echo.Context) error {
 
 	var req struct {
 		ConnectionName string
-		PeriodMinute   string
+		IntervalMinute string
 		TimeBeforeHour string
 	}
 
@@ -86,17 +91,22 @@ func GetClusterNodeMetricData(c echo.Context) error {
 		return echo.NewHTTPError(http.StatusInternalServerError, "Invalid Metric Type")
 	}
 
-	req.PeriodMinute = c.QueryParam("IntervalMinute")
-	if req.PeriodMinute == "" {
-		req.PeriodMinute = "1"
+	if req.IntervalMinute == "" {
+		req.IntervalMinute = c.QueryParam("IntervalMinute")
+	}
+	if req.IntervalMinute == "" {
+		req.IntervalMinute = "1"
+	}
+
+	if req.TimeBeforeHour == "" {
+		req.TimeBeforeHour = c.QueryParam("TimeBeforeHour")
 	}
-	req.TimeBeforeHour = c.QueryParam("TimeBeforeHour")
 	if req.TimeBeforeHour == "" {
 		req.TimeBeforeHour = "1"
 	}
 
 	// Call common-runtime API
-	result, err := cmrt.GetClusterNodeMetricData(req.ConnectionName, c.Param("ClusterName"), c.Param("NodeGroupName"), c.Param("NodeNumber"), metricType, req.PeriodMinute, req.TimeBeforeHour)
+	result, err := cmrt.GetClusterNodeMetricData(req.ConnectionName, c.Param("ClusterName"), c.Param("NodeGroupName"), c.Param("NodeNumber"), metricType, req.IntervalMinute, req.TimeBeforeHour)
 	if err != nil {
 		return echo.NewHTTPError(http.StatusInternalServerError, err.Error())
 	}
diff --git a/cloud-control-manager/cloud-driver/drivers/azure/resources/MonitoringHandler.go b/cloud-control-manager/cloud-driver/drivers/azure/resources/MonitoringHandler.go
index 13452d84..4cda7b34 100644
--- a/cloud-control-manager/cloud-driver/drivers/azure/resources/MonitoringHandler.go
+++ b/cloud-control-manager/cloud-driver/drivers/azure/resources/MonitoringHandler.go
@@ -138,10 +138,6 @@ func (monitoringHandler *AzureMonitoringHandler) getMetricData(metricType irs.Me
 		}
 
 		for _, timeseries := range metric.TimeSeries {
-			for _, val := range timeseries.MetadataValues {
-				fmt.Println(*val.Name, *val.Value)
-			}
-
 			if timeseries.Data == nil {
 				continue
 			}
